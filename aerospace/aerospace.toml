# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 10

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# Sketchy bar integration
# 1. Trigger sketchybar and pass workspace data
exec-on-workspace-change = [
    '/bin/bash',
    '-c',
    '/opt/homebrew/opt/sketchybar/bin/sketchybar --trigger aerospace_workspace_change AEROSPACE_FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE AEROSPACE_PREV_WORKSPACE=$AEROSPACE_PREV_WORKSPACE',
]

# 2. Add --focus-follows-window to the workspace change binds. This forces the workspace to follow when a window is moved to another workspace.
#    This will cause 'exec-on-workspace-change' to fire, keeping the bar updated. Without this, when windows are moved to a new space, they won't appear in the bar until the bar is focused.

# If you need multi-monitor support, extend the key binded to 'move-workspace-to-monitor' to also trigger a sketchybar event
# alt-shift-tab = [
#   'move-workspace-to-monitor --wrap-around next',
#   'exec-and-forget sketchybar --trigger aerospace_monitor_change TARGET_MONITOR=$(aerospace list-monitors --focused --format "%{monitor-appkit-nsscreen-screens-id}") FOCUSED_WORKSPACE=$(aerospace list-workspaces --focused)',
# ]

# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 4
inner.vertical = 4
outer.left = 4
outer.bottom = 4
outer.top = 32
outer.right = 4

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
#                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
#                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
#                   sectionSign (ISO keyboards only, european keyboards only)
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut
# (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'[]
# '''

# Tips: set hyper key to cmd + alt + ctrl

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
cmd-ctrl-alt-slash = 'layout tiles horizontal vertical'
cmd-ctrl-alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
cmd-ctrl-alt-h = 'focus left'
cmd-ctrl-alt-j = 'focus down'
cmd-ctrl-alt-k = 'focus up'
cmd-ctrl-alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
cmd-ctrl-alt-shift-h = 'move left'
cmd-ctrl-alt-shift-j = 'move down'
cmd-ctrl-alt-shift-k = 'move up'
cmd-ctrl-alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
cmd-ctrl-alt-minus = 'resize smart -50'
cmd-ctrl-alt-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
cmd-ctrl-alt-1 = 'workspace 1'
cmd-ctrl-alt-2 = 'workspace 2'
cmd-ctrl-alt-3 = 'workspace 3'
cmd-ctrl-alt-4 = 'workspace 4'
cmd-ctrl-alt-5 = 'workspace 5'
cmd-ctrl-alt-6 = 'workspace 6'
cmd-ctrl-alt-7 = 'workspace 7'
cmd-ctrl-alt-8 = 'workspace 8'
cmd-ctrl-alt-9 = 'workspace 9'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
cmd-ctrl-alt-shift-1 = 'move-node-to-workspace 1 --focus-follows-window'
cmd-ctrl-alt-shift-2 = 'move-node-to-workspace 2 --focus-follows-window'
cmd-ctrl-alt-shift-3 = 'move-node-to-workspace 3 --focus-follows-window'
cmd-ctrl-alt-shift-4 = 'move-node-to-workspace 4 --focus-follows-window'
cmd-ctrl-alt-shift-5 = 'move-node-to-workspace 5 --focus-follows-window'
cmd-ctrl-alt-shift-6 = 'move-node-to-workspace 6 --focus-follows-window'
cmd-ctrl-alt-shift-7 = 'move-node-to-workspace 7 --focus-follows-window'
cmd-ctrl-alt-shift-8 = 'move-node-to-workspace 8 --focus-follows-window'
cmd-ctrl-alt-shift-9 = 'move-node-to-workspace 9 --focus-follows-window'

cmd-ctrl-alt-tab = 'workspace-back-and-forth'
cmd-ctrl-alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'
cmd-ctrl-alt-shift-f = 'fullscreen'
f11 = 'macos-native-fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
cmd-ctrl-alt-shift-semicolon = ['mode service']

cmd-ctrl-alt-t = [
    'exec-and-forget alacritty msg create-window || alacritty',
    'mode main',
    'exec-and-forget /opt/homebrew/opt/sketchybar/bin/sketchybar --trigger window_detected',
]
cmd-ctrl-alt-a = [
    'exec-and-forget Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --new-window --app="https://perplexity.ai"',
    'mode main',
    'exec-and-forget /opt/homebrew/opt/sketchybar/bin/sketchybar --trigger window_detected',
]
cmd-ctrl-alt-b = [
    'exec-and-forget Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --new-window',
    'mode main',
    'exec-and-forget /opt/homebrew/opt/sketchybar/bin/sketchybar --trigger window_detected',
]
cmd-ctrl-alt-shift-b = [
    'exec-and-forget /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --new-window --incognito',
    'mode main',
    'exec-and-forget /opt/homebrew/opt/sketchybar/bin/sketchybar --trigger window_detected',
]
cmd-ctrl-alt-c = [
    'exec-and-forget open -a "Calendar"',
    'mode main',
    'exec-and-forget /opt/homebrew/opt/sketchybar/bin/sketchybar --trigger window_detected',
]
cmd-ctrl-alt-f = [
    '''exec-and-forget osascript -e '
    tell application "Finder"
        make new Finder window
        activate
    end tell'
    ''',
    'mode main',
    'exec-and-forget /opt/homebrew/opt/sketchybar/bin/sketchybar --trigger window_detected',
]
cmd-ctrl-alt-e = [
    'exec-and-forget Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --new-window --app="https://gmail.com"',
    'mode main',
    'exec-and-forget /opt/homebrew/opt/sketchybar/bin/sketchybar --trigger window_detected',
]
cmd-ctrl-alt-m = [
    'exec-and-forget open -a "Spotify"',
    'mode main',
    'exec-and-forget /opt/homebrew/opt/sketchybar/bin/sketchybar --trigger window_detected',
]
cmd-ctrl-alt-n = [
    'exec-and-forget Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --new-window --app="https://keep.google.com"',
    'mode main',
    'exec-and-forget /opt/homebrew/opt/sketchybar/bin/sketchybar --trigger window_detected',
]

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
cmd-ctrl-alt-shift-semicolon = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main']
f = ['layout floating tiling', 'mode main']
backspace = ['close-all-windows-but-current', 'mode main']
h = ['join-with left', 'mode main']
j = ['join-with down', 'mode main']
k = ['join-with up', 'mode main']
l = ['join-with right', 'mode main']
